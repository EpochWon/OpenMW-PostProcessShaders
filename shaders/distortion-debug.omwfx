uniform_float uMultiplier {
	default = 1.0;
	step = 0.1;
}

uniform_int uMode {
	default = 1;
    display_name = "View Mode";
    widget_type = choice(
        "Disabled" = 0,
        "Distortion Normals" = 1,
        "Distortion Occlusion" = 2,
        "Normals + Occlusion" = 3
    );
}

fragment main {

    omw_In vec2 omw_TexCoord;

    void main()
    {
        vec2 offset = omw_Texture2D(omw_SamplerDistortion, omw_TexCoord).rg;
        offset *= uMultiplier;
        offset = clamp(offset, vec2(-1.0), vec2(1.0));
	
		float occlusionFactor = omw_Texture2D(omw_SamplerDistortion, omw_TexCoord+offset).b;
		vec2 adjustedoffset = (offset + 1.0 / 2.0);
        adjustedoffset -= 0.5;
		if (uMode == 1) {
            omw_FragColor = vec4(adjustedoffset, 0.0, 1.0);
        } else if (uMode == 2) {
            omw_FragColor = vec4(occlusionFactor, occlusionFactor, occlusionFactor, 1.0);
        } else if (uMode == 3) {
			omw_FragColor = mix(vec4(adjustedoffset, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0), occlusionFactor);
		} else {
			omw_FragColor = omw_GetLastShader(omw_TexCoord);
		}
    }
}

technique {
    passes = main;
    description = "Debug helper for the internal distortion shader. 0.49+ only

Basically just the internal distortion shader but with the distortion part removed";
    author = "Epoch";
    version = "1.0";
}
