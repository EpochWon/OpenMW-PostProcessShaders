uniform_float uPixelation {
	default = 4.0;
	step = 0.1;
	min = 0.0;
	display_name = "Pixelization Amount";
}

uniform_bool uEnabled {
	default = true;
	header = "Debug";
	display_name = "Enable Shader";
	description = "Toggle the entire shader";
}

shared {
	
}

fragment main {
	omw_In vec2 omw_TexCoord;
	

	void main()
	{
		if (uEnabled) {
			float dx = uPixelation / omw.resolution.x;
			float dy = uPixelation / omw.resolution.y;
			vec2 uv = vec2(dx * (floor(omw_TexCoord.x / dx) + 0.5), dy * (floor(omw_TexCoord.y / dy) + 0.5));
			vec4 scene = omw_GetLastShader(uv);
			omw_FragColor = scene;
		} 
		else {
			omw_FragColor = omw_GetLastShader(omw_TexCoord);
		}
	}
}

technique {
    description = "Pixelate the viewport";
    passes = main;
    version = "2.0";
    author = "Epoch";
}
